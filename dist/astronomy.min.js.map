{"version":3,"sources":["webpack://AstronomyJS/webpack/universalModuleDefinition","webpack://AstronomyJS/webpack/bootstrap","webpack://AstronomyJS/./src/solar-system-objects/solar-system-object.js","webpack://AstronomyJS/./src/solar-system-objects/orbital-parameters.js","webpack://AstronomyJS/./src/math-helper.js","webpack://AstronomyJS/./src/constants.js","webpack://AstronomyJS/./src/coordinates/rectangular-coordinates.js","webpack://AstronomyJS/./src/time-helper.js","webpack://AstronomyJS/./src/coordinates/spherical-coordinates.js","webpack://AstronomyJS/./src/solar-system-objects/sun.js","webpack://AstronomyJS/./src/solar-system-objects/planets/neptune.js","webpack://AstronomyJS/./src/solar-system-objects/planets/uranus.js","webpack://AstronomyJS/./src/solar-system-objects/planets/saturn.js","webpack://AstronomyJS/./src/solar-system-objects/planets/jupiter.js","webpack://AstronomyJS/./src/solar-system-objects/planets/mars.js","webpack://AstronomyJS/./src/solar-system-objects/planets/earth.js","webpack://AstronomyJS/./src/solar-system-objects/planets/venus.js","webpack://AstronomyJS/./src/sky-object.js","webpack://AstronomyJS/./src/solar-system-objects/planets/mercury.js","webpack://AstronomyJS/./src/solar-system-objects/planets/planets-list.js","webpack://AstronomyJS/./src/solar-system-objects/solar-system-objects-list.js","webpack://AstronomyJS/./src/observer.js","webpack://AstronomyJS/./src/main.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_skyObject","_rectangularCoordinates","_timeHelper","_mathHelper","_constants","SolarSystemObject","orbitalParameters","meanRadius","axialTilt","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","Constants","SOLAR_SYSTEM_OBJECT","julianDate","julianCenturiesSinceEpoch2000","TimeHelper","MathHelper","degreesToRadians","getInclination","V","getTrueAnomaly","w","getPerihelion","O","getAscendingNode","R","getOrbitRadius","VwO","XH","Math","cos","sin","YH","ZH","RectangularCoordinates","OrbitalParameters","a0","e0","i0","o0","w0","l0","ac","ec","ic","oc","wc","lc","modDegrees","getMeanLongitude","meanAnomalyInRadians","getMeanAnomaly","eccentricity","getEccentricity","PREVIOUS_E","E","dE","loopCount","abs","EPS","radiansToDegrees","eccentricAnomaly","getEccentricAnomaly","trueAnomaly","atan","sqrt","tan","semiMajorAxis","getSemiMajorAxis","degrees","radians","PI","GREENWICH_OBSERVATORY_COORDINATES","LATITUDE","LONGITUDE","RADIUS","MS_PER_HOUR","MS_PER_DAY","MS_PER_YEAR","JULIAN_DAY_OFFSET","JULIAN_DAY_2000","JULIAN_DAY_2010","DEGREE","ARC_SECONDS_IN_A_DEGREE","DAYS_PER_JULIAN_CENTURY","x","y","z","rectangularCoordinates","date","julianDaysSinceEpoch2000","jd","t","result","SphericalCoordinates","latitude","longitude","radius","toString","padStart","_solarSystemObject","Sun","_orbitalParameters","Neptune","Uranus","Saturn","Jupiter","Mars","Earth","Venus","SkyObject","objectType","Mercury","_mercury","_venus","_earth","_mars","_jupiter","_saturn","_uranus","_neptune","PLANETS_LIST","_planetsList","_sun","SOLAR_SYSTEM_OBJECTS_LIST","concat","_sphericalCoordinates","Observer","sphericalCoordinates","solarSystemObject","otherSolarSystemObject","getRectangularHeliocentricCoordinates","minus","rectangularObjectCentricCoordinatesForSolarSystemObject","getRectangularObjectCentricCoordinatesForSolarSystemObject","eclipticInRadians","objectCentricCoordinates","equatorialCoordinates","getRectangularEquatorialCoordinatesForSolarSystemObject","correction","rightAscension","declination","getDistanceToSolarSystemObject","hourAngle","getLocalSiderealTime","altitude","asin","azimuth","atan2","meanSiderealTime","_observer","_solarSystemObjectsList","MainModule","assign","_skyObjects","_julianDate","_date","getJulianDate","setJulianDate","newJulianDate","getDate","Date","setDate","newDate","getSkyObjectByName","objectName","find","element","setObserverLocation","elevationFromObjectSurface","getRADecCoordinatesForObject","getRADecCoordinatesForSolarSystemObject","getAltAzCoordinatesForObject","getAltAzCoordinatesForEquatorialCoordinates"],"mappings":"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","file":"astronomy.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AstronomyJS\"] = factory();\n\telse\n\t\troot[\"AstronomyJS\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n","import {SkyObject} from \"../sky-object\";\r\nimport {RectangularCoordinates} from \"../coordinates/rectangular-coordinates\";\r\nimport {TimeHelper} from \"../time-helper\";\r\nimport {MathHelper} from \"../math-helper\";\r\nimport {Constants} from \"../constants\";\r\n\r\nexport class SolarSystemObject extends SkyObject {\r\n    constructor(name, orbitalParameters, meanRadius, axialTilt) {\r\n        super(Constants.SOLAR_SYSTEM_OBJECT, name);\r\n        this.orbitalParameters = orbitalParameters;\r\n        this.meanRadius = meanRadius;\r\n        this.axialTilt = axialTilt;\r\n    }\r\n\r\n    /**\r\n     * @param julianDate\r\n     * @returns {RectangularCoordinates}\r\n     */\r\n    getRectangularHeliocentricCoordinates(julianDate) {\r\n        const julianCenturiesSinceEpoch2000 = TimeHelper.julianCenturiesSinceEpoch2000(julianDate);\r\n        const i = MathHelper.degreesToRadians(this.orbitalParameters.getInclination(julianCenturiesSinceEpoch2000));\r\n        const V = MathHelper.degreesToRadians(this.orbitalParameters.getTrueAnomaly(julianCenturiesSinceEpoch2000));\r\n        const w = MathHelper.degreesToRadians(this.orbitalParameters.getPerihelion(julianCenturiesSinceEpoch2000));\r\n        const O = MathHelper.degreesToRadians(this.orbitalParameters.getAscendingNode(julianCenturiesSinceEpoch2000));\r\n        const R = this.orbitalParameters.getOrbitRadius(julianCenturiesSinceEpoch2000);\r\n        const VwO = V + w - O;\r\n\r\n        const XH = R * (Math.cos(O) * Math.cos(VwO) - Math.sin(O) * Math.sin(VwO) * Math.cos(i));\r\n        const YH = R * (Math.sin(O) * Math.cos(VwO) + Math.cos(O) * Math.sin(VwO) * Math.cos(i));\r\n        const ZH = R * (Math.sin(VwO) * Math.sin(i));\r\n\r\n        return new RectangularCoordinates(XH, YH, ZH);\r\n    }\r\n}\r\n","import {MathHelper} from \"../math-helper\";\r\nimport {Constants} from \"../constants\";\r\n\r\nexport class OrbitalParameters {\r\n    /**\r\n     * @constructor\r\n     * @param a0 semi-major axis (AU)\r\n     * @param e0 eccentricity\r\n     * @param i0 inclination (degrees)\r\n     * @param o0 longitude of the ascending node (degrees)\r\n     * @param w0 longitude of perihelion (degrees)\r\n     * @param l0 mean longitude (degrees)\r\n     * @param ac semi-major axis centennial rate (AU per Julian century)\r\n     * @param ec eccentricity (per Julian century)\r\n     * @param ic inclination (arc seconds per Julian century)\r\n     * @param oc longitude of the ascending node (arc seconds per Julian century)\r\n     * @param wc longitude of perihelion (arc seconds per Julian century)\r\n     * @param lc mean longitude (arc seconds per Julian century)\r\n     */\r\n    constructor(a0, e0, i0, o0, w0, l0, ac, ec, ic, oc, wc, lc) {\r\n        this.a0 = a0;\r\n        this.e0 = e0;\r\n        this.i0 = i0;\r\n        this.o0 = o0;\r\n        this.w0 = w0;\r\n        this.l0 = l0;\r\n        this.ac = ac;\r\n        this.ec = ec;\r\n        this.ic = ic;\r\n        this.oc = oc;\r\n        this.wc = wc;\r\n        this.lc = lc;\r\n    }\r\n\r\n    /**\r\n     * @param julianCenturiesSinceEpoch2000\r\n     * @returns a - semi major axis\r\n     */\r\n    getSemiMajorAxis(julianCenturiesSinceEpoch2000) {\r\n        return this.a0 + this.ac * julianCenturiesSinceEpoch2000;\r\n    }\r\n\r\n    /**\r\n     * @param julianCenturiesSinceEpoch2000\r\n     * @returns e - eccentricity\r\n     */\r\n    getEccentricity(julianCenturiesSinceEpoch2000) {\r\n        return this.e0 + this.ec * julianCenturiesSinceEpoch2000;\r\n    }\r\n    getInclination(julianCenturiesSinceEpoch2000) {\r\n        return MathHelper.modDegrees(this.i0 + this.ic / 3600 * julianCenturiesSinceEpoch2000);\r\n    }\r\n    getAscendingNode(julianCenturiesSinceEpoch2000) {\r\n        return MathHelper.modDegrees(this.o0 + this.oc / 3600 * julianCenturiesSinceEpoch2000);\r\n    }\r\n    getPerihelion(julianCenturiesSinceEpoch2000) {\r\n        return MathHelper.modDegrees(this.w0 + this.wc / 3600 * julianCenturiesSinceEpoch2000);\r\n    }\r\n    getMeanLongitude(julianCenturiesSinceEpoch2000) {\r\n        return MathHelper.modDegrees(this.l0 + this.lc / 3600 * julianCenturiesSinceEpoch2000);\r\n    }\r\n    getMeanAnomaly(julianCenturiesSinceEpoch2000) {\r\n        return MathHelper.modDegrees(this.getMeanLongitude(julianCenturiesSinceEpoch2000) - this.getPerihelion(julianCenturiesSinceEpoch2000));\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param julianCenturiesSinceEpoch2000\r\n     * @returns {*} E: eccentric anomaly\r\n     */\r\n    getEccentricAnomaly(julianCenturiesSinceEpoch2000) {\r\n        let meanAnomalyInRadians = MathHelper.degreesToRadians(this.getMeanAnomaly(julianCenturiesSinceEpoch2000));\r\n        let eccentricity = this.getEccentricity(julianCenturiesSinceEpoch2000);\r\n\r\n        let PREVIOUS_E = meanAnomalyInRadians + eccentricity * Math.sin(meanAnomalyInRadians) * (1.0 + eccentricity * Math.cos(meanAnomalyInRadians));\r\n        let E = 0;\r\n        let dE = 0;\r\n        let loopCount = 0;\r\n        while (loopCount++ < 10000) {\r\n            E = PREVIOUS_E - (PREVIOUS_E - eccentricity * Math.sin(PREVIOUS_E) - meanAnomalyInRadians) / (1 - eccentricity * Math.cos(PREVIOUS_E));\r\n            dE = E - PREVIOUS_E;\r\n            PREVIOUS_E = E;\r\n            if (Math.abs(dE) <= Constants.EPS) {\r\n                break;\r\n            }\r\n        }\r\n        return MathHelper.radiansToDegrees(E);\r\n    }\r\n\r\n    /**\r\n     * @param julianCenturiesSinceEpoch2000\r\n     * @returns V: true anomaly\r\n     */\r\n    getTrueAnomaly(julianCenturiesSinceEpoch2000) {\r\n        let eccentricity = this.getEccentricity(julianCenturiesSinceEpoch2000);\r\n        let eccentricAnomaly = MathHelper.degreesToRadians(this.getEccentricAnomaly(julianCenturiesSinceEpoch2000));\r\n        let trueAnomaly = 2 * Math.atan(Math.sqrt((1 + eccentricity) / (1 - eccentricity)) * Math.tan(0.5 * eccentricAnomaly));\r\n        return MathHelper.radiansToDegrees(trueAnomaly);\r\n    }\r\n\r\n    /**\r\n     * R = (a * (1 - e^2)) / (1 + e * cos(V))\r\n     * @param julianCenturiesSinceEpoch2000\r\n     * @returns R: orbit meanRadius\r\n     */\r\n    getOrbitRadius(julianCenturiesSinceEpoch2000) {\r\n        let semiMajorAxis = this.getSemiMajorAxis(julianCenturiesSinceEpoch2000);\r\n        let eccentricity = this.getEccentricity(julianCenturiesSinceEpoch2000);\r\n        let trueAnomaly = this.getTrueAnomaly(julianCenturiesSinceEpoch2000);\r\n        return (semiMajorAxis * (1 - eccentricity ** 2)) / (1 + eccentricity * Math.cos(MathHelper.degreesToRadians(trueAnomaly)));\r\n    }\r\n}\r\n","export class MathHelper {\r\n    static modDegrees(degrees) {\r\n        while (degrees < 0) {\r\n            degrees = degrees + 360;\r\n        }\r\n        return degrees % 360;\r\n    }\r\n    static radiansToDegrees(radians) {\r\n        return radians * 180.0 / Math.PI;\r\n    }\r\n    static degreesToRadians(degrees) {\r\n        return degrees * Math.PI / 180.0;\r\n    }\r\n}\r\n","export const Constants = {\r\n    SOLAR_SYSTEM_OBJECT: 'SOLAR_SYSTEM_OBJECT',\r\n    GREENWICH_OBSERVATORY_COORDINATES: {\r\n        LATITUDE: 51.476852,\r\n        LONGITUDE: -0.000500,\r\n        RADIUS: 6371000 + 46\r\n    },\r\n    MS_PER_HOUR: 3600 * 1000,\r\n    MS_PER_DAY: 3600 * 1000 * 24,\r\n    MS_PER_YEAR: 3600 * 1000 * 24 * 365.2422,\r\n    JULIAN_DAY_OFFSET: 2440587.5,\r\n    JULIAN_DAY_2000: 2451545,\r\n    JULIAN_DAY_2010: 2451545 + 3652.5,\r\n    EPS: 10 ** (-9),\r\n    DEGREE: Math.PI / 180,\r\n    ARC_SECONDS_IN_A_DEGREE: 3600,\r\n    DAYS_PER_JULIAN_CENTURY: 36525\r\n};","export class RectangularCoordinates {\r\n    constructor (x, y, z) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n    minus(rectangularCoordinates) {\r\n        return new RectangularCoordinates(this.x - rectangularCoordinates.x,\r\n            this.y - rectangularCoordinates.y, this.z - rectangularCoordinates.z);\r\n    }\r\n}","import {Constants} from \"./constants\";\r\nimport {MathHelper} from \"./math-helper\";\r\n\r\nexport class TimeHelper {\r\n    static julianDate(date) {\r\n        return ((date / Constants.MS_PER_DAY) + Constants.JULIAN_DAY_OFFSET);\r\n    };\r\n    static julianDaysSinceEpoch2000(julianDate) {\r\n        return julianDate - Constants.JULIAN_DAY_2000;\r\n    }\r\n    static julianCenturiesSinceEpoch2000(julianDate) {\r\n        return this.julianDaysSinceEpoch2000(julianDate) / Constants.DAYS_PER_JULIAN_CENTURY;\r\n    };\r\n    static meanSiderealTime(julianDate) {\r\n        const jd = this.julianDaysSinceEpoch2000(julianDate);\r\n        const t = this.julianCenturiesSinceEpoch2000(julianDate);\r\n        const result = 280.46061837 + 360.98564736629 * jd + 0.000387933 * t * t - t * t * t / 38710000;\r\n        return MathHelper.modDegrees(result);\r\n    }\r\n}\r\n","export class SphericalCoordinates {\r\n    constructor (latitude, longitude, radius) {\r\n        this.latitude = latitude;\r\n        this.longitude = longitude;\r\n        this.radius = radius;\r\n    }\r\n    toDegrees() {\r\n        let latitude = this.latitude;\r\n        let longitude = this.longitude;\r\n        return new SphericalCoordinates(\r\n            `${latitude < 0 ? '-' : ''}${(0|(latitude<0?latitude=-latitude:latitude)).toString().padStart(2, '0')}\\u00B0\r\n                ${(0|(latitude % 1 * 60)).toString().padStart(2, '0')}' ${((0|(latitude * 60 % 1 * 60))).toString().padStart(2, '0')}''`,\r\n            `${longitude < 0 ? '-' : ''}${(0|(longitude<0?longitude=-longitude:longitude)).toString().padStart(2, '0')}\\u00B0\r\n                ${(0|(longitude % 1 * 60)).toString().padStart(2, '0')}' ${((0|(longitude * 60 % 1 * 60))).toString().padStart(2, '0')}''`,\r\n            this.radius\r\n        );\r\n    }\r\n    toHours() {\r\n        let latitude = this.latitude;\r\n        let longitude = this.longitude;\r\n        return new SphericalCoordinates(\r\n            `${latitude < 0 ? '-' : ''}${(0|(latitude < 0 ? latitude=-latitude:latitude)).toString().padStart(2, '0')}\\u00B0\r\n                ${(0|(latitude % 1 * 60)).toString().padStart(2, '0')}' ${((0|(latitude * 60 % 1 * 60))).toString().padStart(2, '0')}''`,\r\n            `${longitude < 0 ? '-' : ''}${(0|(longitude < 0 ? longitude = -longitude / 15 : longitude = longitude / 15)).toString().padStart(2, '0')}h\r\n                ${(0|(longitude % 1 * 60)).toString().padStart(2, '0')}m ${((0|(longitude * 60 % 1 * 60))).toString().padStart(2, '0')}s`,\r\n            this.radius\r\n        );\r\n    }\r\n}","import {SolarSystemObject} from \"./solar-system-object\";\r\nimport {RectangularCoordinates} from \"../coordinates/rectangular-coordinates\";\r\n\r\nexport class Sun extends SolarSystemObject {\r\n    constructor() {\r\n        super('Sun', null, 695508000);\r\n    }\r\n    getRectangularHeliocentricCoordinates() {\r\n        return new RectangularCoordinates(0, 0, 0);\r\n    }\r\n}","import {SolarSystemObject} from \"../solar-system-object\";\r\nimport {OrbitalParameters} from \"../orbital-parameters\";\r\n\r\nexport class Neptune extends SolarSystemObject {\r\n    constructor() {\r\n        const orbitalParameters = new OrbitalParameters(\r\n            30.06896348, 0.00858587, 1.76917, 131.72169, 44.97135, 304.88003,\r\n            -0.00125196, 0.0000251, -3.64, -151.25, -844.43, 786449.21\r\n        );\r\n        super('Neptune', orbitalParameters, 24622000, 28.32);\r\n    }\r\n}","import {SolarSystemObject} from \"../solar-system-object\";\r\nimport {OrbitalParameters} from \"../orbital-parameters\";\r\n\r\nexport class Uranus extends SolarSystemObject {\r\n    constructor() {\r\n        const orbitalParameters = new OrbitalParameters(\r\n            19.19126393, 0.04716771, 0.76986, 74.22988, 170.96424, 313.23218,\r\n            0.00152025, -0.00019150, -2.09, -1681.40, 1312.56, 1542547.79\r\n        );\r\n        super('Uranus', orbitalParameters, 25362000, 97.77);\r\n    }\r\n}","import {SolarSystemObject} from \"../solar-system-object\";\r\nimport {OrbitalParameters} from \"../orbital-parameters\";\r\n\r\nexport class Saturn extends SolarSystemObject {\r\n    constructor() {\r\n        const orbitalParameters = new OrbitalParameters(\r\n            9.53707032, 0.05415060, 2.48446, 113.71504, 92.43194, 49.94432,\r\n            -0.00301530, -0.00036762, 6.11, -1591.05, -1948.89, 4401052.95\r\n        );\r\n        super('Saturn', orbitalParameters, 58232000, 26.73);\r\n    }\r\n}","import {SolarSystemObject} from \"../solar-system-object\";\r\nimport {OrbitalParameters} from \"../orbital-parameters\";\r\n\r\nexport class Jupiter extends SolarSystemObject {\r\n    constructor() {\r\n        const orbitalParameters = new OrbitalParameters(\r\n            5.20336301, 0.04839266, 1.30530, 100.55615, 14.75385, 34.40438,\r\n            0.00060737, -0.00012880, -4.15, 1217.17, 839.93, 10925078.35\r\n        );\r\n        super('Jupiter', orbitalParameters, 69911000, 3.13);\r\n    }\r\n}","import {SolarSystemObject} from \"../solar-system-object\";\r\nimport {OrbitalParameters} from \"../orbital-parameters\";\r\n\r\nexport class Mars extends SolarSystemObject {\r\n    constructor() {\r\n        const orbitalParameters = new OrbitalParameters(\r\n            1.52366231, 0.09341233, 1.85061, 49.57854, 336.04084, 355.45332,\r\n            -0.00007221, 0.00011902, -25.47, -1020.19, 1560.78, 68905103.78\r\n        );\r\n        super('Mars', orbitalParameters, 3389500, 25.19);\r\n    }\r\n}","import {SolarSystemObject} from \"../solar-system-object\";\r\nimport {OrbitalParameters} from \"../orbital-parameters\";\r\n\r\nexport class Earth extends SolarSystemObject {\r\n    constructor() {\r\n        const orbitalParameters = new OrbitalParameters(\r\n            1.00000011, 0.01671022, 0.00005, -11.26064, 102.94719, 100.46435,\r\n            -0.00000005, -0.00003804, -46.94, -18228.25, 1198.28, 129597740.63\r\n        );\r\n        super('Earth', orbitalParameters, 6371000, 23.439281);\r\n    }\r\n}","import {SolarSystemObject} from \"../solar-system-object\";\r\nimport {OrbitalParameters} from \"../orbital-parameters\";\r\n\r\nexport class Venus extends SolarSystemObject {\r\n    constructor() {\r\n        const orbitalParameters = new OrbitalParameters(\r\n            0.72333199, 0.00677323, 3.39471, 76.68069, 131.53298, 181.97973,\r\n            0.00000092, -0.00004938, -2.86, -996.89, -108.80, 210664136.06\r\n        );\r\n        super('Venus', orbitalParameters, 6051800, 2.64);\r\n    }\r\n}","export class SkyObject {\r\n    constructor (objectType, name) {\r\n        this.objectType = objectType;\r\n        this.name = name;\r\n    }\r\n}","import {SolarSystemObject} from \"../solar-system-object\";\r\nimport {OrbitalParameters} from \"../orbital-parameters\";\r\n\r\nexport class Mercury extends SolarSystemObject {\r\n    constructor() {\r\n        const orbitalParameters = new OrbitalParameters(\r\n            0.38709893, 0.20563069, 7.00487, 48.33167, 77.45645, 252.25084,\r\n            0.00000066, 0.00002527, -23.51, -446.30, 573.57, 538101628.29\r\n        );\r\n        super('Mercury', orbitalParameters, 2439700, 2.04);\r\n    }\r\n}","import {Mercury} from \"./mercury\";\r\nimport {Venus} from \"./venus\";\r\nimport {Earth} from \"./earth\";\r\nimport {Mars} from \"./mars\";\r\nimport {Jupiter} from \"./jupiter\";\r\nimport {Saturn} from \"./saturn\";\r\nimport {Uranus} from \"./uranus\";\r\nimport {Neptune} from \"./neptune\";\r\n\r\nexport const PLANETS_LIST = [\r\n    new Mercury(), new Venus(), new Earth(), new Mars(),\r\n    new Jupiter(), new Saturn(), new Uranus(), new Neptune()\r\n];","import {PLANETS_LIST} from \"./planets/planets-list\";\r\nimport {Sun} from \"./sun\";\r\n\r\nexport const SOLAR_SYSTEM_OBJECTS_LIST = [new Sun()].concat(PLANETS_LIST);\r\n","import {RectangularCoordinates} from \"./coordinates/rectangular-coordinates\";\r\nimport {MathHelper} from \"./math-helper\";\r\nimport {SphericalCoordinates} from \"./coordinates/spherical-coordinates\";\r\nimport {TimeHelper} from \"./time-helper\";\r\nimport {Constants} from \"./constants\";\r\n\r\nexport class Observer {\r\n    constructor(sphericalCoordinates, solarSystemObject) {\r\n        this.sphericalCoordinates = sphericalCoordinates || new SphericalCoordinates(\r\n            Constants.GREENWICH_OBSERVATORY_COORDINATES.LATITUDE,\r\n            Constants.GREENWICH_OBSERVATORY_COORDINATES.LONGITUDE,\r\n            Constants.GREENWICH_OBSERVATORY_COORDINATES.RADIUS\r\n        );\r\n        this.solarSystemObject = solarSystemObject;\r\n    }\r\n\r\n    getRectangularObjectCentricCoordinatesForSolarSystemObject(otherSolarSystemObject, julianDate) {\r\n        return otherSolarSystemObject.getRectangularHeliocentricCoordinates(julianDate)\r\n            .minus(this.solarSystemObject.getRectangularHeliocentricCoordinates(julianDate));\r\n    }\r\n\r\n    getRectangularEquatorialCoordinatesForSolarSystemObject(otherSolarSystemObject, julianDate) {\r\n        const rectangularObjectCentricCoordinatesForSolarSystemObject =\r\n            this.getRectangularObjectCentricCoordinatesForSolarSystemObject(otherSolarSystemObject, julianDate);\r\n        const eclipticInRadians = MathHelper.degreesToRadians(this.solarSystemObject.axialTilt);\r\n        return new RectangularCoordinates(\r\n            rectangularObjectCentricCoordinatesForSolarSystemObject.x,\r\n            rectangularObjectCentricCoordinatesForSolarSystemObject.y * Math.cos(eclipticInRadians) -\r\n            rectangularObjectCentricCoordinatesForSolarSystemObject.z * Math.sin(eclipticInRadians),\r\n            rectangularObjectCentricCoordinatesForSolarSystemObject.y * Math.sin(eclipticInRadians) +\r\n            rectangularObjectCentricCoordinatesForSolarSystemObject.z * Math.cos(eclipticInRadians)\r\n        )\r\n    }\r\n\r\n    getDistanceToSolarSystemObject(otherSolarSystemObject, julianDate) {\r\n        const objectCentricCoordinates = this.getRectangularObjectCentricCoordinatesForSolarSystemObject(otherSolarSystemObject, julianDate);\r\n        return Math.sqrt(objectCentricCoordinates.x ** 2 + objectCentricCoordinates.y ** 2 + objectCentricCoordinates.z ** 2);\r\n    }\r\n\r\n    getRADecCoordinatesForSolarSystemObject(otherSolarSystemObject, julianDate) {\r\n        const equatorialCoordinates =\r\n            this.getRectangularEquatorialCoordinatesForSolarSystemObject(otherSolarSystemObject, julianDate);\r\n        const correction = (equatorialCoordinates.x > 0 && equatorialCoordinates.y < 0) ? 360 : (equatorialCoordinates.x < 0) ? 180 : 0;\r\n        const rightAscension = MathHelper.radiansToDegrees(Math.atan(equatorialCoordinates.y / equatorialCoordinates.x)) + correction;\r\n        const declination = MathHelper.radiansToDegrees(Math.atan(equatorialCoordinates.z / Math.sqrt(equatorialCoordinates.x ** 2 + equatorialCoordinates.y ** 2)));\r\n        return new SphericalCoordinates(declination, rightAscension, this.getDistanceToSolarSystemObject(otherSolarSystemObject, julianDate));\r\n    }\r\n\r\n    getAltAzCoordinatesForEquatorialCoordinates(equatorialCoordinates, julianDate) {\r\n        const hourAngle = MathHelper.degreesToRadians(MathHelper.modDegrees(equatorialCoordinates.longitude - this.getLocalSiderealTime(julianDate)));\r\n        const latitude = MathHelper.degreesToRadians(this.sphericalCoordinates.latitude);\r\n        const declination = MathHelper.degreesToRadians(equatorialCoordinates.latitude);\r\n        const altitude = MathHelper.radiansToDegrees(Math.asin(Math.sin(latitude) * Math.sin(declination) + Math.cos(latitude) * Math.cos(declination) * Math.cos(hourAngle)));\r\n        const azimuth = MathHelper.radiansToDegrees(Math.PI - Math.atan2(Math.sin(hourAngle), Math.cos(hourAngle) * Math.sin(latitude) - Math.tan(declination) * Math.cos(latitude)));\r\n        return new SphericalCoordinates(altitude, azimuth, null);\r\n    }\r\n\r\n    getLocalSiderealTime(julianDate) {\r\n        return MathHelper.modDegrees(TimeHelper.meanSiderealTime(julianDate) + this.sphericalCoordinates.longitude);\r\n    }\r\n}","import {TimeHelper} from \"./time-helper\";\r\nimport {Observer} from \"./observer\";\r\nimport {SphericalCoordinates} from \"./coordinates/spherical-coordinates\";\r\nimport {SOLAR_SYSTEM_OBJECTS_LIST} from \"./solar-system-objects/solar-system-objects-list\";\r\n\r\nexport const MainModule = Object.assign({}, {\r\n    _skyObjects: [].concat(SOLAR_SYSTEM_OBJECTS_LIST),\r\n    _observer: new Observer(),\r\n    _julianDate: null,\r\n    _date: null,\r\n\r\n    getJulianDate: function() {\r\n        return this._julianDate;\r\n    },\r\n    setJulianDate: function(newJulianDate) {\r\n        this._julianDate = newJulianDate;\r\n    },\r\n    getDate: function() {\r\n        return this._date || new Date();\r\n    },\r\n    setDate: function(newDate) {\r\n        this._date = newDate;\r\n        this.setJulianDate(TimeHelper.julianDate(newDate));\r\n    },\r\n    getSkyObjectByName: function(objectName) {\r\n        return this._skyObjects.find(function(element) {\r\n            return element.name === objectName;\r\n        });\r\n    },\r\n    setObserverLocation: function(objectName, latitude, longitude, elevationFromObjectSurface) {\r\n        const solarSystemObject = this.getSkyObjectByName(objectName);\r\n        this._observer = new Observer(\r\n            new SphericalCoordinates(latitude, longitude, solarSystemObject.meanRadius + elevationFromObjectSurface),\r\n            solarSystemObject\r\n        );\r\n    },\r\n    getRADecCoordinatesForObject: function(objectName) {\r\n        return this._observer.getRADecCoordinatesForSolarSystemObject(this.getSkyObjectByName(objectName), this.getJulianDate());\r\n    },\r\n    getAltAzCoordinatesForObject: function(objectName) {\r\n        const equatorialCoordinates = this._observer.getRADecCoordinatesForSolarSystemObject(this.getSkyObjectByName(objectName), this.getJulianDate());\r\n        return this._observer.getAltAzCoordinatesForEquatorialCoordinates(equatorialCoordinates, this.getJulianDate());\r\n    }\r\n});\r\n"],"sourceRoot":""}